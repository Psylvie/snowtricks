{% extends 'base.html.twig' %}

{% block title %}Éditer le Trick{% endblock %}

{% block body %}
	<div class="container my-5 bg-light">
	{{ form_start(form) }}
	{% include 'Trick/partials/_media.html.twig' with {'form': form}%}
	<div class="row justify-content-center mb-4">
	<div class="col-md-8">
		<div class="row mb-4">
			<div class="col-md-6 mb-3">
				<div class="card border-light shadow-sm">
					<div class="card-body">
						<h5 class="card-title">Images</h5>
						{{ form_label(form.pictures, null, {'attr': {'class': 'form-label'}}) }}
						{{ form_widget(form.pictures, {'attr': {'multiple': 'multiple', 'class': 'form-control btn-secondary'}}) }}
						{{ form_errors(form.pictures) }}
					</div>
				</div>
			</div>
			<div class="col-md-6 mb-3">
				<div class="card border-light shadow-sm">
					<div class="card-body">
						<h5 class="card-title">Vidéos</h5>
						<div id="videos-list"
							 data-prototype="{{ form_widget(form.videos.vars.prototype)|e('html_attr') }}">
							{{ form_row(form.videos) }}
						</div>
						<button type="button" id="add-video" class="btn btn-secondary mt-2">
							Ajouter une vidéo
						</button>
					</div>
				</div>
			</div>
		</div>
		<div class="row mb-4 justify-content-start">
			<div class="col-md-3 mb-3 d-flex">
				<div class="info-box p-2 border rounded bg-white w-100 text-start border-dark border-1">
					<div class="d-flex align-items-center justify-content-center">
						<i class="fas fa-calendar-alt me-1"></i>
						<span class="small">Création: {{ trick.createdAt|date('d/m/Y') }}</span>
					</div>
				</div>
			</div>
			{% if trick.updatedAt is defined %}
				<div class="col-md-3 mb-3 d-flex">
					<div class="info-box p-2 border rounded bg-white w-100 text-center border-dark border-1">
						<div class="d-flex align-items-center justify-content-center">
							<i class="fas fa-calendar-edit me-1"></i>
							<span class="small">Modif: {{ trick.updatedAt|date('d/m/Y') }}</span>
						</div>
					</div>
				</div>
			{% endif %}
			<div class="col-md-3 mb-3 d-flex">
				<div class="info-box p-2 border rounded bg-white w-100 text-center border-dark border-1">
					<div class="d-flex align-items-center justify-content-center">
						<i class="fas fa-tag me-1"></i>
						<span class="small">Groupe : {{ trick.category.name }}</span>
					</div>
				</div>
			</div>
		</div>
		<div class="mb-4">
			{{ form_widget(form.description, {'attr': {'class': 'form-control border-dark border-2 rounded'}}) }}
		</div>
		<div class="row mb-4">
			<div class="col-md-3 mb-3">
				<div class="input-group">
					{{ form_widget(form.category, {'attr': {'class': 'form-select btn-secondary'}}) }}
				</div>
			</div>
			<div class="col-md-9 d-flex align-items-center justify-content-end mb-3">
				<div class="d-flex">
					<a href="{{ path('app_trick_delete', {'id': trick.id}) }}"
					   onclick="return confirm('Êtes-vous sûr de vouloir supprimer ce trick ?');">
						<button type="button" class="btn btn-danger me-2">Supprimer</button>
					</a>
					<button type="submit" class="btn btn-success">Sauvegarder</button>
				</div>
			</div>
		</div>
		<p>{{ form_errors(form) }}</p>
		{{ form_end(form) }}

		<div class="d-flex justify-content-end mb-3">
			<a href="{{ path('app_trick_list') }}" class="btn btn-secondary">Retour</a>
		</div>
		<!-- Modal main picture -->
		<div class="modal fade" id="editMainPictureModal" tabindex="-1" aria-labelledby="editMainPictureModalLabel"
			 aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="editMainPictureModalLabel">Modifier l'image principale</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="updateMainPictureForm" action="{{ path('app_trick_edit', { slug: trick.slug }) }}"
							  method="post" enctype="multipart/form-data">
							{% if mainPicture %}
								<input type="hidden" name="pictureId" value="{{ mainPicture.id }}">
							{% endif %}
							<div class="mb-3">
								<label for="newMainImage" class="form-label">Nouvelle image principale</label>
								<input type="file" class="form-control" id="newMainImage" name="newImage">
							</div>
							<button type="submit" class="btn btn-primary">Mettre à jour</button>
						</form>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>
		<!-- Modal picture -->
		<div class="modal fade" id="editImageModal" tabindex="-1" aria-labelledby="editImageModalLabel"
			 aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="editImageModalLabel">Modifier l'image</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="editImageForm" method="post" enctype="multipart/form-data">
							<div class="mb-3">
								<label for="newImage" class="form-label">Télécharger une nouvelle image</label>
								<input type="file" class="form-control" id="newImage" name="newImage">
							</div>
							<input type="hidden" id="pictureId" name="pictureId">
							<button type="submit" class="btn btn-primary">Enregistrer les modifications</button>
						</form>
					</div>
				</div>
			</div>
		</div>
		<!-- Modal vidéo -->
		<div class="modal fade" id="editVideoModal" tabindex="-1" aria-labelledby="editVideoModalLabel"
			 aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title" id="editVideoModalLabel">Modifier la Vidéo</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">
						<form id="editVideoForm" method="post">
							<input type="hidden" id="videoId" name="videoId">
							<div class="mb-3">
								<label for="newVideoLink" class="form-label">Nouveau lien vidéo</label>
								<input type="url" class="form-control" id="newVideoLink" name="newVideoLink"
									   required>
							</div>
							<button type="submit" class="btn btn-primary">Enregistrer les modifications</button>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
	<script>
        document.addEventListener('DOMContentLoaded', function () {
            const editImageModal = document.getElementById('editImageModal');
            if (editImageModal) {
                editImageModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const pictureId = button.getAttribute('data-picture-id');
                    const pictureIdInput = document.getElementById('pictureId');
                    pictureIdInput.value = pictureId;
                });
            }
            const videoModal = document.getElementById('editVideoModal');
            if (videoModal) {
                videoModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const videoId = button.getAttribute('data-video-id');
                    const videoLink = button.getAttribute('data-video-link');

                    const modalVideoId = videoModal.querySelector('#videoId');
                    const modalVideoLink = videoModal.querySelector('#newVideoLink');

                    modalVideoId.value = videoId;
                    modalVideoLink.value = videoLink;
                });
            }
            // Delete Picture
            document.querySelectorAll('.delete-picture-link').forEach(link => {
                link.addEventListener('click', function (event) {
                    event.preventDefault();
                    const pictureId = this.getAttribute('data-picture-id');
                    if (confirm('Êtes-vous sûr de vouloir supprimer cette image ?')) {
                        fetch('{{ path('app_trick_edit', {slug: trick.slug}) }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({delete_picture_id: pictureId})
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    location.reload();
                                } else {
                                    alert('Erreur lors de la suppression de l\'image.');
                                }
                            });
                    }
                });
            });

            // Delete vidéos
            document.querySelectorAll('.delete-video-link').forEach(link => {
                link.addEventListener('click', function (event) {
                    event.preventDefault();
                    const videoId = this.getAttribute('data-video-id');
                    if (confirm('Êtes-vous sûr de vouloir supprimer cette vidéo ?')) {
                        fetch('{{ path('app_trick_edit', {slug: trick.slug}) }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({delete_video_id: videoId})
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    location.reload();
                                } else {
                                    alert('Erreur lors de la suppression de la vidéo.');
                                }
                            });
                    }
                });
            });

            // Delete main picture
            document.querySelectorAll('.delete-image-main').forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    const pictureId = this.getAttribute('data-picture-id');
                    if (confirm('Êtes-vous sûr de vouloir supprimer cette image principale ?')) {
                        fetch('{{ path('app_trick_edit', { slug: trick.slug }) }}', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest',
                            },
                            body: JSON.stringify({
                                delete_picture_id: pictureId,
                            }),
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    location.reload();
                                } else {
                                    alert('Erreur lors de la suppression de l\'image principale.');
                                }
                            });
                    }
                });
            });
        });
	</script>
{% endblock %}